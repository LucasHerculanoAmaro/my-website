{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor() {\n    this.themes = ['secondary', 'principal'];\n    this.currentThemeIndex = 0;\n    // Recupera o tema salvo no localStorage ao inicializar o serviço\n    const savedThemeIndex = localStorage.getItem('selectedThemeIndex');\n    this.currentThemeIndex = savedThemeIndex !== null ? parseInt(savedThemeIndex, 10) : 0;\n    console.log('Tema salvo:', theme);\n    this.applyTheme(this.currentThemeIndex);\n  }\n  // Aplica o tema atual\n  applyTheme(themeIndex) {\n    console.log('Aplicando tema:', this.themes[themeIndex]);\n    document.body.className = this.themes[themeIndex];\n    localStorage.setItem('selectedThemeIndex', themeIndex.toString());\n  }\n  // Alterna para o próximo tema\n  cycleThemes() {\n    this.currentThemeIndex = (this.currentThemeIndex + 1) % this.themes.length;\n    this.applyTheme(this.currentThemeIndex);\n  }\n  // Obtém o índice do tema atual\n  getCurrentThemeIndex() {\n    return this.currentThemeIndex;\n  }\n}\n_class = ThemeService;\n_class.ɵfac = function ThemeService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ThemeService","constructor","themes","currentThemeIndex","savedThemeIndex","localStorage","getItem","parseInt","console","log","theme","applyTheme","themeIndex","document","body","className","setItem","toString","cycleThemes","length","getCurrentThemeIndex","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Administrador\\Documents\\Trabalho\\lucasherculanoamaro.github.io\\src\\app\\service\\theme.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n\r\n  private themes: string[] = ['secondary', 'principal'];\r\n  private currentThemeIndex: number = 0;\r\n\r\n  constructor() {\r\n    // Recupera o tema salvo no localStorage ao inicializar o serviço\r\n    const savedThemeIndex = localStorage.getItem('selectedThemeIndex');\r\n    this.currentThemeIndex = savedThemeIndex !== null ? parseInt(savedThemeIndex, 10) : 0;\r\n    \r\n    console.log('Tema salvo:', theme)\r\n    \r\n    this.applyTheme(this.currentThemeIndex);\r\n  }\r\n\r\n  // Aplica o tema atual\r\n  applyTheme(themeIndex: number): void {\r\n\r\n    console.log('Aplicando tema:', this.themes[themeIndex]);\r\n\r\n    document.body.className = this.themes[themeIndex];\r\n    localStorage.setItem('selectedThemeIndex', themeIndex.toString());\r\n  }\r\n\r\n  // Alterna para o próximo tema\r\n  cycleThemes(): void {\r\n    this.currentThemeIndex = (this.currentThemeIndex + 1) % this.themes.length;\r\n    this.applyTheme(this.currentThemeIndex);\r\n  }\r\n\r\n  // Obtém o índice do tema atual\r\n  getCurrentThemeIndex(): number {\r\n    return this.currentThemeIndex;\r\n  }\r\n}\r\n"],"mappings":";;AAKA,OAAM,MAAOA,YAAY;EAKvBC,YAAA;IAHQ,KAAAC,MAAM,GAAa,CAAC,WAAW,EAAE,WAAW,CAAC;IAC7C,KAAAC,iBAAiB,GAAW,CAAC;IAGnC;IACA,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;IAClE,IAAI,CAACH,iBAAiB,GAAGC,eAAe,KAAK,IAAI,GAAGG,QAAQ,CAACH,eAAe,EAAE,EAAE,CAAC,GAAG,CAAC;IAErFI,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,KAAK,CAAC;IAEjC,IAAI,CAACC,UAAU,CAAC,IAAI,CAACR,iBAAiB,CAAC;EACzC;EAEA;EACAQ,UAAUA,CAACC,UAAkB;IAE3BJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACP,MAAM,CAACU,UAAU,CAAC,CAAC;IAEvDC,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAG,IAAI,CAACb,MAAM,CAACU,UAAU,CAAC;IACjDP,YAAY,CAACW,OAAO,CAAC,oBAAoB,EAAEJ,UAAU,CAACK,QAAQ,EAAE,CAAC;EACnE;EAEA;EACAC,WAAWA,CAAA;IACT,IAAI,CAACf,iBAAiB,GAAG,CAAC,IAAI,CAACA,iBAAiB,GAAG,CAAC,IAAI,IAAI,CAACD,MAAM,CAACiB,MAAM;IAC1E,IAAI,CAACR,UAAU,CAAC,IAAI,CAACR,iBAAiB,CAAC;EACzC;EAEA;EACAiB,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACjB,iBAAiB;EAC/B;;SAjCWH,YAAY;;mBAAZA,MAAY;AAAA;;SAAZA,MAAY;EAAAqB,OAAA,EAAZrB,MAAY,CAAAsB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}